{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","loader","enqueue","createContext","Header","render","react_default","className","gatsby_link_default","to","id","href","Component","Footer","target","rel","index_es","icon","faLinkedin","faGithub","Layout","children","_856328897","Fragment","components_header","siteTitle","components_footer"],"mappings":"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","file":"component---src-pages-404-js-43a21fd62015950063a6.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { Link } from \"gatsby\"\nimport React, { Component } from \"react\"\n\nimport \"./styles/header.css\"\n// import MenuIcon from \"../images/menu.svg\"\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <div className=\"header-wrapper\">\n          <div className=\"logo\">\n            <Link to=\"/\">\n              Edward<span>F</span>.\n            </Link>\n          </div>\n\n          <nav className=\"nav\">\n            <ul>\n              <li>\n                <Link to=\"/about/\">About</Link>\n              </li>\n            </ul>\n          </nav>\n\n          <a\n            id=\"contact-me-btn\"\n            className=\"btn\"\n            href=\"mailto:edanfesi@gmail.com?subject=Hello%20Edward\"\n          >\n            Contact me\n          </a>\n          <div id=\"menu-icon\" className=\"play\"></div>\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default Header\n","import React from \"react\"\n\nimport \"./styles/footer.css\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\"\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"social-media-wrapper\">\n        <a\n          className=\"social-media-link social-media-link--linkedin\"\n          target=\"_blank\"\n          href=\"https://www.linkedin.com/in/edanfesi/\"\n          rel=\"noopener noreferrer\"\n        >\n          <FontAwesomeIcon icon={faLinkedin} />\n        </a>\n        <a\n          className=\"social-media-link social-media-link--github\"\n          target=\"_blank\"\n          href=\"https://github.com/edanfesi\"\n          rel=\"noopener noreferrer\"\n        >\n          <FontAwesomeIcon icon={faGithub} />\n        </a>\n      </div>\n\n      <p>\n        Copyright 2019 All rights reserved — Designed & Coded by Edward\n        Fernandez\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport \"./styles/reset.css\"\nimport \"./styles/layout.css\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main>{children}</main>\n      <Footer />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}